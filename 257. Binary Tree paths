/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<String> binaryTreePaths(TreeNode root) {
        List<String> result = new ArrayList<String>();

            if(root == null) {
                return result;
            }

            extra(new String(), root, result);

            return result;
        }

        public void extra(String current, TreeNode root, List<String> result) {
            if(root.left == null && root.right == null) {
                result.add(current + root.val);
            }

            if(root.left != null) {
                extra(current + root.val + "->", root.left, result);
            }

            if(root.right != null) {
                extra(current + root.val + "->", root.right, result);
            }
        }

    }
